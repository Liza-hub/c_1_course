#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <conio.h>
#include <stdlib.h>
#include <locale.h>
#include <string.h>

struct elem
{
	char word[15];
	elem* next;
};

int main()
{
	setlocale(0, "russian");
	elem* first, * last, * p, * q;
	char st[40], s[15], sim[]="???????????????";
	int i, dls = 0, k = 0;
	s[dls] = '\0';
	first = NULL;
	last = NULL;
	puts("Введите слова через пробел:");
	gets_s(st);
	for (i = 0; i <= strlen(st); i++)
	{
		if ((st[i] == '\0') || (st[i] == ' '))
		{
			s[dls] = '\0';
			if (first == NULL)
			{
				first = new elem;
				strcpy(first->word, s);
				first->next = NULL;
				last = first;
			}
			else
			{
				p = new elem;
				strcpy(p->word, s);
				p->next = first;
				first = p;
			}
			dls = 0;
		}
		else s[dls++] = st[i];
	}
	q = first->next;
	p = new elem;
	strcpy(p->word, sim);
	p->next = q;
	first->next = p;
	p = new elem;
	strcpy(p->word, sim);
	last->next = p;
	p->next = NULL;
	puts("Список:");
	p = first;
	while (p != NULL)
	{
		puts(p->word);
		p = p->next;
	}
	return 0;
}



!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!


#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <conio.h>
#include <stdlib.h>
#include <locale.h>
#include <string.h>

struct elem
{
	char word[15];
	elem* next;
};

int main()
{
	setlocale(0, "russian");
	elem* first, * last, * p, * q;
	char st[40], s[15];
	int i, dls = 0, k = 0;
	s[dls] = '\0';
	first = NULL;
	last = NULL;
	puts("Введите слова через пробел:");
	gets_s(st);
	for (i = 0; i <= strlen(st); i++)
	{
		if ((st[i] == '\0') || (st[i] == ' '))
		{
			s[dls] = '\0';
			if (first == NULL)
			{
				first = new elem;
				strcpy(first->word, s);
				first->next = NULL;
				last = first;
			}
			else
			{
				p = new elem;
				strcpy(p->word, s);
				p->next = first;
				first = p;
			}
			dls = 0;
		}
		else s[dls++] = st[i];
	}
	p = first->next;
	q = first;
	k = 1;
	while (p != NULL)
	{
		k++;
		if (k % 3 == 0)
		{
			q->next = p->next;
			delete p;
			p = q->next;
		}
		else
		{
			q = p;
			p = p->next;
		}
	}
	puts("Список:");
	p = first;
	while (p != NULL)
	{
		puts(p->word);
		p = p->next;
	}
	p = first;
	while (p != NULL)
	{
		q = p;
		p = p->next;
		delete q;
	}
	return 0;
}
